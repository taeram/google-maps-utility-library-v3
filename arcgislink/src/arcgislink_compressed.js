(function(){var namespace=function(ns){var i,c,n;var names=ns.split(".");n=window;for(i=0,c=names.length;i<c;i++){n[names[i]]=n[names[i]]||{};n=n[names[i]]}return n};var W=window;var G=namespace("google.maps");var Config={proxyUrl:null,alwaysUseProxy:false};var WGS84,NAD83,WEB_MERCATOR,WEB_MERCATOR_AUX;var spatialReferences={};var extractString=function(full,start,end){var i=(start==="")?0:full.indexOf(start);var e=end===""?full.length:full.indexOf(end,i+start.length);return full.substring(i+start.length,e)};var isString=function(o){return typeof o==="string"};var isArray=function(o){return o&&o.splice};var isNumber=function(o){return typeof o==="number"};var augmentObject=function(src,dest,force){if(src&&dest){var p;for(p in src){if(force||!(p in dest)){dest[p]=src[p]}}}return dest};var indexOfObj=function(arr,obj,ignoreCase){if(arr&&obj){if(arr.indexOf&&!ignoreCase){return arr.indexOf(obj)}else{for(var i=0,c=arr.length;i<c;i++){if(arr[i]===obj||(ignoreCase===true&&arr[i].toString().toLowerCase()===obj.toString().toLowerCase())){return i}}}}return -1};var mergeArray=function(arr,sub){for(var i=0,c=sub.length;i<c;i++){arr.push(sub[i])}return arr};var removeFromArray=function(arr,elm){var i=indexOfObj(arr,elm);if(i!==-1){arr.splice(i,1)}};var getAttrValue=function(attrs,name){if(typeof attrs[name]!=="undefined"){return attrs[name]}for(var x in attrs){if(attrs.hasOwnProperty(x)){if(name.toLowerCase()===x.toString().toLowerCase()){return attrs[x]}}}return null};var triggerEvent=function(src,evtName,args){if(G.event){G.event.trigger.apply(this,arguments)}};var getTimeString=function(time,endTime){var ret="";if(time){ret+=(time.getTime()-time.getTimezoneOffset()*60000)}if(endTime){ret+=", "+(endTime.getTime()-endTime.getTimezoneOffset()*60000)}return ret};var setOpacity=function(node,op){op=Math.min(Math.max(op,0),1);if(node){var st=node.style;if(typeof st.opacity!=="undefined"){st.opacity=op}if(typeof st.filters!=="undefined"){st.filters.alpha.opacity=Math.floor(100*op)}if(typeof st.filter!=="undefined"){st.filter="alpha(opacity:"+Math.floor(op*100)+")"}}};var getLayerDefsString=function(defs){var strDefs="";for(var x in defs){if(defs.hasOwnProperty(x)){if(strDefs.length>0){strDefs+=";"}strDefs+=(x+":"+defs[x])}}return strDefs};var getXmlHttp=function(){if(typeof XMLHttpRequest==="undefined"){try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e1){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e2){}throw new Error("This browser does not support XMLHttpRequest.")}else{return new XMLHttpRequest()}};var GeometryType={POINT:"esriGeometryPoint",MULTIPOINT:"esriGeometryMultipoint",POLYLINE:"esriGeometryPolyline",POLYGON:"esriGeometryPolygon",ENVELOPE:"esriGeometryEnvelope"};var getGeometryType=function(obj){var o=obj;if(isArray(obj)&&obj.length>0){o=obj[0]}if(o instanceof G.LatLng||o instanceof G.Marker){if(isArray(obj)&&obj.length>1){return GeometryType.MULTIPOINT}else{return GeometryType.POINT}}else{if(o instanceof G.Polyline){return GeometryType.POLYLINE}else{if(o instanceof G.Polygon){return GeometryType.POLYGON}else{if(o instanceof G.LatLngBounds){return GeometryType.ENVELOPE}else{if(o.x!==undefined&&o.y!==undefined){return GeometryType.POINT}else{if(o.points){return GeometryType.MULTIPOINT}else{if(o.paths){return GeometryType.POLYLINE}else{if(o.rings){return GeometryType.POLYGON}}}}}}}}return null};var isOverlay=function(obj){var o=obj;if(isArray(obj)&&obj.length>0){o=obj[0]}if(isArray(o)&&o.length>0){o=o[0]}if(o instanceof G.LatLng||o instanceof G.Marker||o instanceof G.Polyline||o instanceof G.Polygon||o instanceof G.LatLngBounds){return true}return false};var getSRParam=function(sr){if(!sr){return null}return isNumber(sr)?sr:sr.wkid?sr.wkid:sr.toJSON()};var fromOverlaysToJSON=function(geom){function fromLatLngsToJSON(pts,close){var arr=[];var latlng;for(var i=0,c=pts.getLength();i<c;i++){latlng=pts.getAt(i);arr.push("["+latlng.lng()+","+latlng.lat()+"]")}if(close&&arr.length>0){arr.push("["+pts.getAt(0).lng()+","+pts.getAt(0).lat()+"]")}return arr.join(",")}var gtype=getGeometryType(geom);var g,gs,i,pts;var json="{";switch(gtype){case GeometryType.POINT:g=isArray(geom)?geom[0]:geom;if(g instanceof G.Marker){g=g.getPosition()}json+="x:"+g.lng()+",y:"+g.lat();break;case GeometryType.MULTIPOINT:pts=[];for(i=0;i<geom.length;i++){if(geom[i] instanceof G.Marker){g=geom[i].getPosition()}else{g=geom[i]}pts.push("["+g.lng()+","+g.lat()+"]")}json+="points: ["+pts.join(",")+"]";break;case GeometryType.POLYLINE:pts=[];gs=isArray(geom)?geom:[geom];for(i=0;i<gs.length;i++){pts.push("["+fromLatLngsToJSON(gs[i].getPath())+"]")}json+="paths:["+pts.join(",")+"]";break;case GeometryType.POLYGON:pts=[];g=isArray(geom)?geom[0]:geom;var paths=g.getPaths();for(i=0;i<paths.getLength();i++){pts.push("["+fromLatLngsToJSON(paths.getAt(i),true)+"]")}json+="rings:["+pts.join(",")+"]";break;case GeometryType.ENVELOPE:g=isArray(geom)?geom[0]:geom;json+="xmin:"+g.getSouthWest().lng()+",ymin:"+g.getSouthWest().lat()+",xmax:"+g.getNorthEast().lng()+",ymax:"+g.getNorthEast().lat();break}json+=", spatialReference:{wkid:4326}";json+="}";return json};var fromGeometryToJSON=function(geom){function fromPointsToJSON(pts){var arr=[];for(var i=0,c=pts.length;i<c;i++){arr.push("["+pts[i][0]+","+pts[i][1]+"]")}return"["+arr.join(",")+"]"}function fromLinesToJSON(lines){var arr=[];for(var i=0,c=lines.length;i<c;i++){arr.push(fromPointsToJSON(lines[i]))}return"["+arr.join(",")+"]"}var json="{";if(geom.x){json+="x:"+geom.x+",y:"+geom.y}else{if(geom.xmin){json+="xmin:"+geom.xmin+",ymin:"+geom.ymin+",xmax:"+geom.xmax+",ymax:"+geom.ymax}else{if(geom.points){json+="points:"+fromPointsToJSON(geom.points)}else{if(geom.paths){json+="paths:"+fromLinesToJSON(geom.paths)}else{if(geom.rings){json+="rings:"+fromLinesToJSON(geom.rings)}}}}}json+="}";return json};var fromEnvelopeToLatLngBounds=function(extent){var sr=spatialReferences[extent.spatialReference.wkid||extent.spatialReference.wkt];sr=sr||WGS84;var sw=sr.reverse([extent.xmin,extent.ymin]);var ne=sr.reverse([extent.xmax,extent.ymax]);return new G.LatLngBounds(new G.LatLng(sw[1],sw[0]),new G.LatLng(ne[1],ne[0]))};var fromJSONToOverlays=function(geom,opts){var ovs=null;var sr=null;var ov;var x,i,ic,j,jc,parts,part,lnglat,latlngs;var title="";opts=opts||{};if(geom){ovs=[];if(geom.x){ov=new G.Marker(augmentObject(opts.markerOptions||opts,{position:new G.LatLng(geom.y,geom.x)}));ovs.push(ov)}else{parts=geom.points||geom.paths||geom.rings;if(!parts){return ovs}var rings=[];for(i=0,ic=parts.length;i<ic;i++){part=parts[i];if(geom.points){ov=new G.Marker(augmentObject(opts.markerOptions||opts,{position:new G.LatLng(part[1],part[0])}));ovs.push(ov)}else{latlngs=[];for(j=0,jc=part.length;j<jc;j++){lnglat=part[j];latlngs.push(new G.LatLng(lnglat[1],lnglat[0]))}if(geom.paths){ov=new G.Polyline(augmentObject(opts.polylineOptions||opts,{path:latlngs}));ovs.push(ov)}else{if(geom.rings){rings.push(latlngs)}}}}if(geom.rings){ov=new G.Polygon(augmentObject(opts.polygonOptions||opts,{paths:rings}));ovs.push(ov)}}}return ovs};var formatRequestString=function(o){var ret;if(typeof o==="object"){if(isArray(o)){ret=[];for(var i=0,I=o.length;i<I;i++){ret.push(formatRequestString(o[i]))}return"["+ret.join(",")+"]"}else{if(isOverlay(o)){return fromOverlaysToJSON(o)}else{if(o.toJSON){return o.toJSON()}else{ret="";for(var x in o){if(o.hasOwnProperty(x)){if(ret.length>0){ret+=", "}ret+=x+":"+formatRequestString(o[x])}}return"{"+ret+"}"}}}}return o.toString()};var log=function(msg){if(window.console){console.log(msg)}else{var l=document.getElementById("_ags_log");if(l){l.innerHTML=l.innerHTML+msg+"<br/>"}}};var RAD_DEG=Math.PI/180;var Util={};var jsonpID_=0;window.ags_jsonp=window.ags_jsonp||{};var xdc=window.ags_jsonp;var C={json:"json",callback:"callback"};Util.getJSON=function(url,params,callbackName,callbackFn){var sid="ags_jsonp"+(jsonpID_++)+"_"+Math.floor(Math.random()*1000000);var script=null;var query="";if(params){params.f=params.f||"json";for(var x in params){if(params.hasOwnProperty(x)&&params[x]!==null&&params[x]!==undefined){var val=formatRequestString(params[x]);query+=(x+"="+(escape?escape(val):encodeURIComponent(val))+"&")}}}query+=callbackName+"=ags_jsonp."+sid;var head=document.getElementsByTagName("head")[0];if(!head){throw new Error("document must have header tag")}var jsonpcallback=function(){delete xdc[sid];if(script){head.removeChild(script)}script=null;callbackFn.apply(null,arguments);triggerEvent(Util,"jsonpend",sid)};xdc[sid]=jsonpcallback;if((query+url).length<2000&&!Config.alwaysUseProxy){script=document.createElement("script");script.src=url+(url.indexOf("?")===-1?"?":"&")+query;script.id=sid;head.appendChild(script)}else{var loc=window.location;var dom=loc.protocol+"//"+loc.hostname+(!loc.port||loc.port===80)?"":":"+loc.port+"/";var useProxy=true;if(url.toLowerCase().indexOf(dom.toLowerCase())!==-1){useProxy=false}if(Config.alwaysUseProxy){useProxy=true}if(useProxy&&!Config.proxyUrl){throw new Error("No Config.proxyUrl defined")}var xmlhttp=getXmlHttp();xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState===4){if(xmlhttp.status===200){eval(xmlhttp.responseText)}else{throw new Error("Error code "+xmlhttp.status)}}};xmlhttp.open("POST",useProxy?Config.proxyUrl+"?"+url:url,true);xmlhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xmlhttp.send(query)}triggerEvent(Util,"jsonpstart",sid);return sid};function SpatialReference(params){params=params||{};this.wkid=params.wkid;this.wkt=params.wkt}SpatialReference.prototype.forward=function(lnglat){return lnglat};SpatialReference.prototype.reverse=function(coords){return coords};SpatialReference.prototype.getCircumference=function(){return 360};SpatialReference.prototype.toJSON=function(){return"{"+(this.wkid?" wkid:"+this.wkid:"wkt: '"+this.wkt+"'")+"}"};function Geographic(params){params=params||{};SpatialReference.call(this,params)}Geographic.prototype=new SpatialReference();function LambertConformalConic(params){params=params||{};SpatialReference.call(this,params);var f_i=params.inverse_flattening;var phi1=params.standard_parallel_1*RAD_DEG;var phi2=params.standard_parallel_2*RAD_DEG;var phiF=params.latitude_of_origin*RAD_DEG;this.a_=params.semi_major/params.unit;this.lamdaF_=params.central_meridian*RAD_DEG;this.FE_=params.false_easting;this.FN_=params.false_northing;var f=1/f_i;var es=2*f-f*f;this.e_=Math.sqrt(es);var m1=this.calc_m_(phi1,es);var m2=this.calc_m_(phi2,es);var tF=this.calc_t_(phiF,this.e_);var t1=this.calc_t_(phi1,this.e_);var t2=this.calc_t_(phi2,this.e_);this.n_=Math.log(m1/m2)/Math.log(t1/t2);this.F_=m1/(this.n_*Math.pow(t1,this.n_));this.rF_=this.calc_r_(this.a_,this.F_,tF,this.n_)}LambertConformalConic.prototype=new SpatialReference();LambertConformalConic.prototype.calc_m_=function(phi,es){var sinphi=Math.sin(phi);return Math.cos(phi)/Math.sqrt(1-es*sinphi*sinphi)};LambertConformalConic.prototype.calc_t_=function(phi,e){var esinphi=e*Math.sin(phi);return Math.tan(Math.PI/4-phi/2)/Math.pow((1-esinphi)/(1+esinphi),e/2)};LambertConformalConic.prototype.calc_r_=function(a,F,t,n){return a*F*Math.pow(t,n)};LambertConformalConic.prototype.calc_phi_=function(t_i,e,phi){var esinphi=e*Math.sin(phi);return Math.PI/2-2*Math.atan(t_i*Math.pow((1-esinphi)/(1+esinphi),e/2))};LambertConformalConic.prototype.solve_phi_=function(t_i,e,init){var i=0;var phi=init;var newphi=this.calc_phi_(t_i,e,phi);while(Math.abs(newphi-phi)>1e-9&&i<10){i++;phi=newphi;newphi=this.calc_phi_(t_i,e,phi)}return newphi};LambertConformalConic.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var t=this.calc_t_(phi,this.e_);var r=this.calc_r_(this.a_,this.F_,t,this.n_);var theta=this.n_*(lamda-this.lamdaF_);var E=this.FE_+r*Math.sin(theta);var N=this.FN_+this.rF_-r*Math.cos(theta);return[E,N]};LambertConformalConic.prototype.reverse=function(coords){var E=coords[0];var N=coords[1];var theta_i=Math.atan((E-this.FE_)/(this.rF_-(N-this.FN_)));var r_i=(this.n_>0?1:-1)*Math.sqrt((E-this.FE_)*(E-this.FE_)+(this.rF_-(N-this.FN_))*(this.rF_-(N-this.FN_)));var t_i=Math.pow((r_i/(this.a_*this.F_)),1/this.n_);var phi=this.solve_phi_(t_i,this.e_,0);var lamda=theta_i/this.n_+this.lamdaF_;return[lamda/RAD_DEG,phi/RAD_DEG]};LambertConformalConic.prototype.getCircumference=function(){return Math.PI*2*this.a_};function TransverseMercator(params){params=params||{};SpatialReference.call(this,params);this.a_=params.semi_major/params.unit;var f_i=params.inverse_flattening;this.k0_=params.scale_factor;var phiF=params.latitude_of_origin*RAD_DEG;this.lamdaF_=params.central_meridian*RAD_DEG;this.FE_=params.false_easting;this.FN_=params.false_northing;var f=1/f_i;this.es_=2*f-f*f;this.ep4_=this.es_*this.es_;this.ep6_=this.ep4_*this.es_;this.eas_=this.es_/(1-this.es_);this.M0_=this.calc_m_(phiF,this.a_,this.es_,this.ep4_,this.ep6_)}TransverseMercator.prototype=new SpatialReference();TransverseMercator.prototype.calc_m_=function(phi,a,es,ep4,ep6){return a*((1-es/4-3*ep4/64-5*ep6/256)*phi-(3*es/8+3*ep4/32+45*ep6/1024)*Math.sin(2*phi)+(15*ep4/256+45*ep6/1024)*Math.sin(4*phi)-(35*ep6/3072)*Math.sin(6*phi))};TransverseMercator.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var nu=this.a_/Math.sqrt(1-this.es_*Math.pow(Math.sin(phi),2));var T=Math.pow(Math.tan(phi),2);var C=this.eas_*Math.pow(Math.cos(phi),2);var A=(lamda-this.lamdaF_)*Math.cos(phi);var M=this.calc_m_(phi,this.a_,this.es_,this.ep4_,this.ep6_);var E=this.FE_+this.k0_*nu*(A+(1-T+C)*Math.pow(A,3)/6+(5-18*T+T*T+72*C-58*this.eas_)*Math.pow(A,5)/120);var N=this.FN_+this.k0_*(M-this.M0_)+nu*Math.tan(phi)*(A*A/2+(5-T+9*C+4*C*C)*Math.pow(A,4)/120+(61-58*T+T*T+600*C-330*this.eas_)*Math.pow(A,6)/720);return[E,N]};TransverseMercator.prototype.reverse=function(coords){var E=coords[0];var N=coords[1];var e1=(1-Math.sqrt(1-this.es_))/(1+Math.sqrt(1-this.es_));var M1=this.M0_+(N-this.FN_)/this.k0_;var mu1=M1/(this.a_*(1-this.es_/4-3*this.ep4_/64-5*this.ep6_/256));var phi1=mu1+(3*e1/2-27*Math.pow(e1,3)/32)*Math.sin(2*mu1)+(21*e1*e1/16-55*Math.pow(e1,4)/32)*Math.sin(4*mu1)+(151*Math.pow(e1,3)/6)*Math.sin(6*mu1)+(1097*Math.pow(e1,4)/512)*Math.sin(8*mu1);var C1=this.eas_*Math.pow(Math.cos(phi1),2);var T1=Math.pow(Math.tan(phi1),2);var N1=this.a_/Math.sqrt(1-this.es_*Math.pow(Math.sin(phi1),2));var R1=this.a_*(1-this.es_)/Math.pow((1-this.es_*Math.pow(Math.sin(phi1),2)),3/2);var D=(E-this.FE_)/(N1*this.k0_);var phi=phi1-(N1*Math.tan(phi1)/R1)*(D*D/2-(5+3*T1+10*C1-4*C1*C1-9*this.eas_)*Math.pow(D,4)/24+(61+90*T1+28*C1+45*T1*T1-252*this.eas_-3*C1*C1)*Math.pow(D,6)/720);var lamda=this.lamdaF_+(D-(1+2*T1+C1)*Math.pow(D,3)/6+(5-2*C1+28*T1-3*C1*C1+8*this.eas_+24*T1*T1)*Math.pow(D,5)/120)/Math.cos(phi1);return[lamda/RAD_DEG,phi/RAD_DEG]};TransverseMercator.prototype.getCircumference=function(){return Math.PI*2*this.a_};function SphereMercator(params){params=params||{};SpatialReference.call(this,params);this.a_=(params.semi_major||6378137)/(params.unit||1);this.lamdaF_=(params.central_meridian||0)*RAD_DEG}SphereMercator.prototype=new SpatialReference();SphereMercator.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var E=this.a_*(lamda-this.lamdaF_);var N=(this.a_/2)*Math.log((1+Math.sin(phi))/(1-Math.sin(phi)));return[E,N]};SphereMercator.prototype.reverse=function(coords){var E=coords[0];var N=coords[1];var phi=Math.PI/2-2*Math.atan(Math.exp(-N/this.a_));var lamda=E/this.a_+this.lamdaF_;return[lamda/RAD_DEG,phi/RAD_DEG]};SphereMercator.prototype.getCircumference=function(){return Math.PI*2*this.a_};function FlatSpatialReference(params){params=params||{};SpatialReference.call(this,params);this.lng_=params.latlng.xmin;this.lat_=params.latlng.ymin;this.x_=params.coords.xmin;this.y_=params.coords.ymin;this.xscale_=(params.coords.xmax-params.coords.xmin)/(params.latlng.xmax-params.latlng.xmin);this.yscale_=(params.coords.ymax-params.coords.ymin)/(params.latlng.ymax-params.latlng.ymin)}FlatSpatialReference.prototype=new SpatialReference();FlatSpatialReference.prototype.forward=function(lnglat){var E=this.x_+(lnglat[0]-this.lng_)*this.xscale_;var N=this.y_+(lnglat[1]-this.lat_)*this.yscale_;return[E,N]};FlatSpatialReference.prototype.reverse=function(coords){var lng=this.lng_+(coords[0]-this.x_)/this.xscale_;var lat=this.lat_+(coords[1]-this.y_)/this.yscale_;return[lng,lat]};FlatSpatialReference.prototype.getCircumference=function(){return this.xscale_*360};WGS84=new Geographic({wkid:4326});NAD83=new Geographic({wkid:4269});WEB_MERCATOR=new SphereMercator({wkid:102113,semi_major:6378137,central_meridian:0,unit:1});WEB_MERCATOR_AUX=new SphereMercator({wkid:102100,semi_major:6378137,central_meridian:0,unit:1});spatialReferences={"4326":WGS84,"4269":NAD83,"102113":WEB_MERCATOR,"102100":WEB_MERCATOR_AUX};SpatialReference.WGS84=WGS84;SpatialReference.NAD83=NAD83;SpatialReference.WEB_MERCATOR=WEB_MERCATOR;SpatialReference.WEB_MERCATOR_AUX=WEB_MERCATOR_AUX;SpatialReference.register=function(wkidt,wktOrSR){var sr=spatialReferences[""+wkidt];if(sr){return sr}if(wktOrSR instanceof SpatialReference){spatialReferences[""+wkidt]=wktOrSR;return wktOrSR}var wkt=wktOrSR||wkidt;var params={wkt:wkidt};if(wkidt===parseInt(wkidt,10)){params={wkid:wkidt}}var prj=extractString(wkt,'PROJECTION["','"]');var spheroid=extractString(wkt,"SPHEROID[","]").split(",");if(prj!==""){params.unit=parseFloat(extractString(extractString(wkt,"PROJECTION",""),"UNIT[","]").split(",")[1]);params.semi_major=parseFloat(spheroid[1]);params.inverse_flattening=parseFloat(spheroid[2]);params.latitude_of_origin=parseFloat(extractString(wkt,'"Latitude_Of_Origin",',"]"));params.central_meridian=parseFloat(extractString(wkt,'"Central_Meridian",',"]"));params.false_easting=parseFloat(extractString(wkt,'"False_Easting",',"]"));params.false_northing=parseFloat(extractString(wkt,'"False_Northing",',"]"))}switch(prj){case"":sr=new SpatialReference(params);break;case"Lambert_Conformal_Conic":params.standard_parallel_1=parseFloat(extractString(wkt,'"Standard_Parallel_1",',"]"));params.standard_parallel_2=parseFloat(extractString(wkt,'"Standard_Parallel_2",',"]"));sr=new LambertConformalConic(params);break;case"Transverse_Mercator":params.scale_factor=parseFloat(extractString(wkt,'"Scale_Factor",',"]"));sr=new TransverseMercator(params);break;default:throw new Error(prj+"  not supported")}if(sr){spatialReferences[""+wkidt]=sr}return sr};function Catalog(url){this.url=url;var me=this;Util.getJSON(url,{f:C.json},"callback",function(json){augmentObject(json,me);triggerEvent(me,"load")})}function Layer(url){this.url=url;this.definition=null}Layer.prototype.loadInfo=function(opt_callback){var me=this;if(this.loaded){return}Util.getJSON(this.url,{},"callback",function(json){augmentObject(json,me);me.loaded=true;if(opt_callback){opt_callback()}})};Layer.prototype.isInScale=function(scale){if(this.maxScale&&this.maxScale>scale){return false}if(this.minScale&&this.minScale<scale){return false}return true};var SpatialRelationship={INTERSECTS:"esriSpatialRelIntersects",CONTAINS:"esriSpatialRelContains",CROSSES:"esriSpatialRelCrosses",ENVELOPE_INTERSECTS:"esriSpatialRelEnvelopeIntersects",INDEX_INTERSECTS:"esriSpatialRelIndexIntersects",OVERLAPS:"esriSpatialRelOverlaps",TOUCHES:"esriSpatialRelTouches",WITHIN:"esriSpatialRelWithin"};Layer.prototype.query=function(p,callback){if(!p){return}var params=augmentObject(p,{});if(p.geometry&&!isString(p.geometry)){params.geometry=fromOverlaysToJSON(p.geometry);params.geometryType=getGeometryType(p.geometry);params.inSR=4326}if(p.spatialRelationship){params.spatialRel=p.spatialRelationship;delete params.spatialRelationship}if(p.outFields&&!isArray(p.outFields)){params.outFields=p.outFields.join(",")}if(p.objectIds){params.objectIds=p.objectIds.join(",")}if(p.time){params.time=getTimeString(p.time,p.endTime)}params.outSR=4326;params.returnGeometry=p.returnGeometry===false?false:true;params.returnIdsOnly=p.returnIdsOnly===true?true:false;Util.getJSON(this.url+"/query",params,"callback",function(json){var i,f;if(json.features){for(i=0;i<json.features.length;i++){f=json.features[i];if(f.geometry){f.geometry=fromJSONToOverlays(f.geometry,p.overlayOptions)}}}callback(json,json.error)})};Layer.prototype.queryRelatedRecords=function(qparams,callback){if(!qparams){return}var params=augmentObject(qparams,{});params.f=params.f||"json";if(params.outFields&&!isString(params.outFields)){params.outFields=params.outFields.join(",")}params.returnGeometry=params.returnGeometry===false?false:true;Util.getJSON(this.url+"/query",params,"callback",callback)};function MapService(url){this.url=url;this.loaded=false;var tks=url.split("/");this.name=tks[tks.length-2].replace(/_/g," ");var me=this;Util.getJSON(url,{f:"json"},C.callback,function(json){me.init_(json)})}MapService.prototype.init_=function(json){var me=this;augmentObject(json,this);if(json.spatialReference.wkt){this.spatialReference=spatialReferences.addSpatialReference(json.spatialReference.wkt,json.spatialReference.wkt)}else{this.spatialReference=spatialReferences[json.spatialReference.wkid]}if(json.tables!==undefined){Util.getJSON(this.url+"/layers",{f:C.json},C.callback,function(json2){me.initLayers_(json2)})}else{this.initLayers_(json)}};MapService.prototype.initLayers_=function(json2){var layers=[];var tables=[];var layer,i,c,info;for(i=0,c=json2.layers.length;i<c;i++){info=json2.layers[i];layer=new Layer(this.url+"/"+info.id);augmentObject(info,layer);layer.visible=layer.defaultVisibility;layers.push(layer)}if(json2.tables){for(i=0,c=json2.tables.length;i<c;i++){info=json2.tables[i];layer=new Layer(this.url+"/"+info.id);augmentObject(info,layer);tables.push(layer)}}for(i=0,c=layers.length;i<c;i++){layer=layers[i];if(layer.subLayerIds){layer.subLayers=[];for(var j=0,jc=layer.subLayerIds.length;j<jc;j++){var subLayer=this.getLayer(layer.subLayerIds[j]);layer.subLayers.push(subLayer);subLayer.parentLayer=layer}}}this.layers=layers;if(json2.tables){this.tables=tables}this.loaded=true;triggerEvent(this,"load")};MapService.prototype.getLayer=function(nameOrId){var layers=this.layers;if(layers){for(var i=0,c=layers.length;i<c;i++){if(nameOrId===layers[i].id){return layers[i]}if(isString(nameOrId)&&layers[i].name.toLowerCase()===nameOrId.toLowerCase()){return layers[i]}}}return null};MapService.prototype.getLayerDefs=function(){var ret={};if(this.layers){for(var i=0,c=this.layers.length;i<c;i++){var layer=this.layers[i];if(layer.definition){ret[String(layer.id)]=layer.definition}}}return ret};MapService.prototype.getVisibleLayerIds=function(){var ret=[];if(this.layers){var layer;var i,c;for(i=0,c=this.layers.length;i<c;i++){layer=this.layers[i];if(layer.subLayers){for(var j=0,jc=layer.subLayers.length;j<jc;j++){if(layer.subLayers[j].visible===false){layer.visible=false;break}}}}for(i=0,c=this.layers.length;i<c;i++){layer=this.layers[i];if(layer.visible===true){ret.push(layer.id)}}}return ret};MapService.prototype.getInitialBounds=function(){if(this.initialExtent){return fromEnvelopeToLatLngBounds(this.initialExtent)}return null};MapService.prototype.exportMap=function(eparams,callback){if(!eparams||!eparams.bounds){return}var params={f:"json"};var bnds=eparams.bounds;params.bbox=""+bnds.getSouthWest().lng()+","+bnds.getSouthWest().lat()+","+bnds.getNorthEast().lng()+","+bnds.getNorthEast().lat();params.size=""+eparams.width+","+eparams.height;params.dpi=eparams.dpi;if(eparams.imageSR){if(eparams.imageSR.wkid){params.imageSR=eparams.imageSR.wkid}else{params.imageSR="{wkt:"+eparams.imageSR.wkt+"}"}}params.bboxSR="4326";params.format=eparams.format;var defs=eparams.layerDefinitions;if(defs===undefined){defs=this.getLayerDefs()}params.layerDefs=getLayerDefsString(defs);var vlayers=eparams.layerIds;var layerOpt=eparams.layerOption||"show";if(vlayers===undefined){vlayers=this.getVisibleLayerIds()}if(vlayers.length>0){params.layers=layerOpt+":"+vlayers.join(",")}else{callback({href:null});return}params.transparent=(eparams.transparent===false?false:true);if(eparams.time){params.time=getTimeString(eparams.time,eparams.endTime)}params.layerTimeOptions=eparams.layerTimeOptions;Util.getJSON(this.url+"/export",params,"callback",function(json){json.bounds=fromEnvelopeToLatLngBounds(json.extent);delete json.extent;callback(json)})};MapService.prototype.identify=function(iparams,callback){if(!iparams){return}var params={};params.geometry=fromOverlaysToJSON(iparams.geometry);params.geometryType=getGeometryType(iparams.geometry);params.mapExtent=fromOverlaysToJSON(iparams.bounds);params.tolerance=iparams.tolerance||2;params.sr=4326;params.imageDisplay=""+iparams.width+","+iparams.height+","+(iparams.dpi||96);params.layers=(iparams.layerOption||"all");if(iparams.layerIds){params.layers+=":"+iparams.layerIds.join(",")}if(iparams.layerDefs){params.layerDefs=getLayerDefsString(iparams.layerDefs)}params.maxAllowableOffset=iparams.maxAllowableOffset;params.returnGeometry=(iparams.returnGeometry===false?false:true);Util.getJSON(this.url+"/identify",params,"callback",function(json){var rets=null;var i,js,f,g;if(json.results){rets=[];for(i=0;i<json.results.length;i++){js=json.results[i];g=fromJSONToOverlays(js.geometry,iparams.overlayOptions);rets.push({feature:{geometry:g,attributes:js.attributes},displayFieldName:js.displayFieldName,layerId:js.layerId,layerName:js.layerName,value:js.value})}}callback({results:rets},json.error)})};MapService.prototype.find=function(opts,callback){if(!opts){return}var params=augmentObject(opts,{});if(opts.layerIds){params.layers=opts.layerIds.join(",");delete params.layerIds}if(opts.searchFields){params.searchFields=opts.searchFields.join(",")}params.contains=(opts.contains===false?false:true);if(opts.layerDefinitions){params.layerDefs=getLayerDefsString(opts.layerDefinitions);delete params.layerDefinitions}params.sr=4326;params.returnGeometry=(opts.returnGeometry===false?false:true);Util.getJSON(this.url+"/find",params,"callback",function(json){var rets=null;var i,js,f,g;if(json.results){rets=[];for(i=0;i<json.results.length;i++){js=json.results[i];g=fromJSONToOverlays(js.geometry,opts.overlayOptions);rets.push({feature:{geometry:g,attributes:js.attributes},displayFieldName:js.displayFieldName,layerId:js.layerId,layerName:js.layerName,foundFieldName:js.foundFieldName,value:js.value})}}callback({results:rets},json.error)})};MapService.prototype.queryLayer=function(layerNameOrId,params,callback){var layer=this.getLayer(layerNameOrId);if(layer){layer.query(params,callback)}};function GeocodeService(url){this.url=url;this.loaded=false;var me=this;Util.getJSON(url,{f:"json"},"callback",function(json){me.init_(json)})}GeocodeService.prototype.init_=function(json){augmentObject(json,this);if(json.spatialReference){this.spatialReference=spatialReferences[json.spatialReference.wkid||json.spatialReference.wkt]||WGS84}this.loaded=true;triggerEvent(this,"load")};GeocodeService.prototype.findAddressCandidates=function(gparams,callback){var params=augmentObject(gparams,{});if(params.inputs){augmentObject(params.inputs,params);delete params.inputs}if(isArray(params.outFields)){params.outFields=params.outFields.join(",")}params.outSR=4326;var me=this;Util.getJSON(this.url+"/findAddressCandidates",params,"callback",function(json){var ret=null;if(json.candidates){var res,loc;for(var i=0;i<json.candidates.length;i++){ret=ret||[];res=json.candidates[i];loc=res.location;if(!isNaN(loc.x)&&!isNaN(loc.y)){var ll=[loc.x,loc.y];if(me.spatialReference){ll=me.spatialReference.reverse(ll)}res.location=new G.LatLng(ll[1],ll[0]);ret.push(res)}}}callback({candidates:ret},json.error)})};GeocodeService.prototype.geocode=function(params,callback){this.findAddressCandidates(params,callback)};GeocodeService.prototype.reverseGeocode=function(params,callback){if(!isString(params.location)){params.location=fromOverlaysToJSON(params.location)}params.f="json";params.outSR=4326;var me=this;Util.getJSON(this.url+"/reverseGeocode",params,"callback",function(json){if(json.location){var loc=json.location;if(!isNaN(loc.x)&&!isNaN(loc.y)){var ll=[loc.x,loc.y];if(me.spatialReference){ll=me.spatialReference.reverse(ll)}json.location=new G.LatLng(ll[1],ll[0])}}callback(json,json.error)})};function Projection(tileInfo){if(!tileInfo){throw new Error("map service is not tiled")}this.tileInfo_=tileInfo;this.spatialReference=spatialReferences[tileInfo.spatialReference.wkid||tileInfo.spatialReference.wkt];if(!this.spatialReference){throw new Error("unsupported Spatial Reference")}this.resolution0_=this.tileInfo_.lods[0].resolution;this.minZoom=Math.floor(Math.log(this.spatialReference.getCircumference()/this.resolution0_/256)/Math.LN2+0.5);this.maxZoom=this.minZoom+this.tileInfo_.lods.length-1;this.tileSize=new G.Size(this.tileInfo_.cols,this.tileInfo_.rows);this.scale_=Math.pow(2,this.minZoom)*this.resolution0_;this.originX_=this.tileInfo_.origin.x;this.originY_=this.tileInfo_.origin.y;var ratio;for(var i=0;i<tileInfo.lods.length-1;i++){ratio=tileInfo.lods[i].resolution/tileInfo.lods[i+1].resolution;if(ratio>2.001||ratio<1.999){throw new Error("This type of map cache is not supported in V3. \nScale ratio between zoom levels must be 2")}}}Projection.prototype.fromLatLngToPoint=function(latlng,opt_point){if(!latlng||isNaN(latlng.lat())||isNaN(latlng.lng())){return null}var coords=this.spatialReference.forward([latlng.lng(),latlng.lat()]);var point=opt_point||new G.Point(0,0);point.x=(coords[0]-this.originX_)/this.scale_;point.y=(this.originY_-coords[1])/this.scale_;return point};Projection.prototype.fromPointToLatLng=function(pixel,opt_nowrap){if(pixel===null){return null}var x=pixel.x*this.scale_+this.originX_;var y=this.originY_-pixel.y*this.scale_;var geo=this.spatialReference.reverse([x,y]);return new G.LatLng(geo[1],geo[0])};Projection.prototype.getScale=function(zoom){var zoomIdx=zoom-this.minZoom;var res=0;if(this.tileInfo_.lods[zoomIdx]){res=this.tileInfo_.lods[zoomIdx].scale}return res};function TileLayer(service,opt_layerOpts){opt_layerOpts=opt_layerOpts||{};if(opt_layerOpts.opacity){this.opacity_=opt_layerOpts.opacity;delete opt_layerOpts.opacity}augmentObject(opt_layerOpts,this);this.mapService=(service instanceof MapService)?service:new MapService(service);if(opt_layerOpts.hosts){var pro=extractString(this.mapService.url,"","://");var host=extractString(this.mapService.url,"://","/");var path=extractString(this.mapService.url,pro+"://"+host,"");this.urlTemplate_=pro+"://"+opt_layerOpts.hosts+path;this.numOfHosts_=parseInt(extractString(opt_layerOpts.hosts,"[","]"),10)}this.name=this.name||this.mapService.name;this.maxZoom=this.maxZoom||19;this.minZoom=this.minZoom||0;if(this.mapService.loaded){this.init_(opt_layerOpts)}else{var me=this;G.event.addListenerOnce(this.mapService,"load",function(){me.init_(opt_layerOpts)})}this.tiles={}}TileLayer.prototype.init_=function(opt_layerOpts){this.projection=new Projection(this.mapService.tileInfo);this.minZoom=opt_layerOpts.minZoom||this.projection.minZoom;this.maxZoom=opt_layerOpts.maxZoom||this.projection.maxZoom};TileLayer.prototype.getTileUrl=function(tile,zoom){var z=zoom-(this.projection?this.projection.minZoom:this.minZoom);var url="";if(!isNaN(tile.x)&&!isNaN(tile.y)&&z>=0&&tile.x>=0&&tile.y>=0){var u=this.mapService.url;if(this.urlTemplate_){u=this.urlTemplate_.replace("["+this.numOfHosts_+"]",""+((tile.y+tile.x)%this.numOfHosts_))}url=u+"/tile/"+z+"/"+tile.y+"/"+tile.x}return url};TileLayer.prototype.setOpacity=function(op){this.opacity_=op;var tiles=this.tiles;for(var x in tiles){if(tiles.hasOwnProperty(x)){setOpacity(tiles[x],op)}}};TileLayer.prototype.getOpacity=function(){return this.opacity_};function MapType(tileLayers,opt_typeOpts){opt_typeOpts=opt_typeOpts||{};var i;if(opt_typeOpts.opacity){this.opacity_=opt_typeOpts.opacity;delete opt_typeOpts.opacity}augmentObject(opt_typeOpts,this);var layers=tileLayers;if(isString(tileLayers)){layers=[new TileLayer(tileLayers)]}else{if(tileLayers instanceof MapService){layers=[new TileLayer(tileLayers)]}else{if(tileLayers instanceof TileLayer){layers=[tileLayers]}else{if(tileLayers.length>0&&isString(tileLayers[0])){layers=[];for(i=0;i<tileLayers.length;i++){layers[i]=new TileLayer(tileLayers[i])}}}}}this.tileLayers=layers;this.tiles={};if(opt_typeOpts.maxZoom!==undefined){this.maxZoom=opt_typeOpts.maxZoom}else{var maxZ=0;for(i=0;i<layers.length;i++){maxZ=Math.max(maxZ,layers[i].maxZoom)}this.maxZoom=maxZ}if(layers[0].projection){this.tileSize=layers[0].projection.tileSize;this.projection=layers[0].projection}else{this.tileSize=new G.Size(256,256)}if(!this.name){this.name=layers[0].name}}MapType.prototype.getTile=function(tileCoord,zoom,ownerDocument){var div=ownerDocument.createElement("div");var tileId="_"+tileCoord.x+"_"+tileCoord.y+"_"+zoom;for(var i=0;i<this.tileLayers.length;i++){var t=this.tileLayers[i];if(zoom<=t.maxZoom&&zoom>=t.minZoom){var url=t.getTileUrl(tileCoord,zoom);if(url){var img=ownerDocument.createElement(document.all?"img":"div");img.style.border="0px none";img.style.margin="0px";img.style.padding="0px";img.style.overflow="hidden";img.style.position="absolute";img.style.top="0px";img.style.left="0px";img.style.width=""+this.tileSize.width+"px";img.style.height=""+this.tileSize.height+"px";if(document.all){img.src=url}else{img.style.backgroundImage="url("+url+")"}div.appendChild(img);t.tiles[tileId]=img;if(t.opacity_!==undefined){setOpacity(img,t.opacity_)}else{if(this.opacity_!==undefined){setOpacity(img,this.opacity_)}}}else{}}}div.setAttribute("tid",tileId);this.tiles[tileId]=div;return div};MapType.prototype.releaseTile=function(node){var tileId=node.getAttribute("tid");if(tileId){if(this.tiles[tileId]){delete this.tiles[tileId]}for(var i=0;i<this.tileLayers.length;i++){var t=this.tileLayers[i];if(t.tiles[tileId]){delete t.tiles[tileId]}}}};MapType.prototype.setOpacity=function(op){this.opacity_=op;var tiles=this.tiles;for(var x in tiles){if(tiles.hasOwnProperty(x)){var nodes=tiles[x].childNodes;for(var i=0;i<nodes.length;i++){setOpacity(nodes[i],op)}}}};MapType.prototype.getOpacity=function(){return this.opacity_};function MapOverlay(service,opt_overlayOpts){opt_overlayOpts=opt_overlayOpts||{};this.mapService=(service instanceof MapService)?service:new MapService(service);this.minZoom=opt_overlayOpts.minZoom;this.maxZoom=opt_overlayOpts.maxZoom;this.opacity_=opt_overlayOpts.opacity||1;this.exportOptions_=opt_overlayOpts.exportOptions||{};this.drawing_=false;this.needsNewRefresh_=false;this.div_=null;if(opt_overlayOpts.map){this.setMap(opt_overlayOpts.map)}}MapOverlay.prototype=new G.OverlayView();MapOverlay.prototype.onAdd=function(){var div=document.createElement("div");div.style.position="absolute";div.style.border="none";div.style.position="absolute";this.div_=div;var panes=this.getPanes();panes.overlayLayer.appendChild(div);if(this.opacity_){setOpacity(div,this.opacity_)}var me=this;this.boundsChangedListener_=G.event.addListener(this.getMap(),"bounds_changed",function(){me.refresh()})};MapOverlay.prototype.onRemove=function(){G.event.removeListener(this.boundsChangedListener_);this.div_.parentNode.removeChild(this.div_);this.div_=null};MapOverlay.prototype.draw=function(){if(!this.drawing_||this.needsNewRefresh_===true){this.refresh()}};MapOverlay.prototype.getOpacity=function(){return this.opacity_};MapOverlay.prototype.setOpacity=function(opacity){var op=Math.min(Math.max(opacity,0),1);this.opacity_=op;var img=this.div_;setOpacity(img,op)};MapOverlay.prototype.refresh=function(){if(this.drawing_===true){this.needsNewRefresh_=true;return}var m=this.getMap();var bnds=m?m.getBounds():null;if(!bnds){return}var params=this.exportOptions_;params.bounds=bnds;var sr=WEB_MERCATOR;var s=m.getDiv();params.width=s.offsetWidth;params.height=s.offsetHeight;var prj=m.getProjection();if(prj&&prj instanceof Projection){sr=prj.spatialReference}params.imageSR=sr;G.event.trigger(this,"drawstart");var me=this;this.drawing_=true;this.div_.style.backgroundImage="";this.mapService.exportMap(params,function(json){me.drawing_=false;if(me.needsNewRefresh_===true){me.needsNewRefresh_=false;me.refresh();return}if(json.href){var overlayProjection=me.getProjection();var bounds=json.bounds;var sw=overlayProjection.fromLatLngToDivPixel(bounds.getSouthWest());var ne=overlayProjection.fromLatLngToDivPixel(bounds.getNorthEast());var div=me.div_;div.style.left=sw.x+"px";div.style.top=ne.y+"px";div.style.width=(ne.x-sw.x)+"px";div.style.height=(sw.y-ne.y)+"px";me.div_.style.backgroundImage="url("+json.href+")";me.setOpacity(me.opacity_)}G.event.trigger(me,"drawend")})};MapOverlay.prototype.isHidden=function(){return !(this.visible_&&this.isInZoomRange_())};MapOverlay.prototype.isInZoomRange_=function(){var z=this.getMap().getZoom();if((this.minZoom!==undefined&&z<this.minZoom)||(this.maxZoom!==undefined&&z>this.maxZoom)){return false}return true};MapOverlay.prototype.show=function(){this.visible_=true;this.div_.style.visibility="visible";this.refresh()};MapOverlay.prototype.hide=function(){this.visible_=false;this.div_.style.visibility="hidden"};function GeometryService(url){this.url=url}function prepareGeometryParams(p){var params={};if(!p){return null}var json=[];var g,isOv;if(p.geometries&&p.geometries.length>0){g=p.geometries[0];isOv=isOverlay(g);for(var i=0,c=p.geometries.length;i<c;i++){if(isOv){json.push(fromOverlaysToJSON(p.geometries[i]))}else{json.push(fromGeometryToJSON(p.geometries[i]))}}}if(!p.geometryType){p.geometryType=getGeometryType(g)}if(isOv){params.inSR=WGS84.wkid}else{if(p.inSpatialReference){params.inSR=getSRParam(p.inSpatialReference)}}if(p.outSpatialReference){params.outSR=getSRParam(p.outSpatialReference)}params.geometries='{geometryType:"'+p.geometryType+'", geometries:['+json.join(",")+"]}";return params}GeometryService.prototype.project=function(p,callback){var params=prepareGeometryParams(p);Util.getJSON(this.url+"/project",params,"callback",function(json){var geom=[];if(p.outSpatialReference===4326||p.outSpatialReference.wkid===4326){for(var i=0,c=json.geometries.length;i<c;i++){geom.push(fromJSONToOverlays(json.geometries[i]))}json.geometries=geom}callback(json,json.error)})};var SRUnit={METER:9001,FOOT:9002,SURVEY_FOOT:9003,SURVEY_MILE:9035,KILLOMETER:9036,RADIAN:9101,DEGREE:9102};GeometryService.prototype.buffer=function(p,callback){var params=prepareGeometryParams(p);if(p.bufferSpatialReference){params.bufferSR=getSRParam(p.bufferSpatialReference)}params.outSR=4326;params.distances=p.distances.join(",");if(p.unit){params.unit=p.unit}Util.getJSON(this.url+"/buffer",params,"callback",function(json){var geom=[];if(json.geometries){for(var i=0,c=json.geometries.length;i<c;i++){geom.push(fromJSONToOverlays(json.geometries[i],p.overlayOptions))}}json.geometries=geom;callback(json,json.error)})};function GPService(url){this.url=url;this.loaded=false;var me=this;Util.getJSON(url,{f:"json"},"callback",function(json){augmentObject(json,me);me.loaded=true;G.event.trigger(me,"load")})}function GPTask(url){this.url=url;this.loaded=false;var me=this;Util.getJSON(url,{f:"json"},"callback",function(json){augmentObject(json,me);me.loaded=true;G.event.trigger(me,"load")})}GPTask.prototype.execute=function(p,callback){var params={};if(p.parameters){augmentObject(p.parameters,params)}if(p.outSpatialReference){params["env:outSR"]=getSRParam(p.outSpatialReference)}else{params["env:outSR"]=4326}if(p.processSpatialReference){params["env:processSR"]=getSRParam(p.processSpatialReference)}var me=this;Util.getJSON(this.url+"/execute",params,"callback",function(json){var ret=null;if(json.results){var res,loc,f;for(var i=0;i<json.results.length;i++){res=json.results[i];if(res.dataType==="GPFeatureRecordSetLayer"){for(var j=0,J=res.value.features.length;j<J;j++){f=res.value.features[j];if(f.geometry){f.geometry=fromJSONToOverlays(f.geometry,p.overlayOptions)}}}}}callback(json,json.error)})};function NetworkService(url){this.url=url;this.loaded=false;var me=this;Util.getJSON(url,{f:"json"},"callback",function(json){augmentObject(json,me);me.loaded=true;G.event.trigger(me,"load")})}var arcgis={SpatialReference:SpatialReference,Geographic:Geographic,LambertConformalConic:LambertConformalConic,SphereMercator:SphereMercator,TransverseMercator:TransverseMercator,SpatialRelationship:SpatialRelationship,GeometryType:GeometryType,SRUnit:SRUnit,Catalog:Catalog,MapService:MapService,Layer:Layer,GeocodeService:GeocodeService,GeometryService:GeometryService,GPService:GPService,GPTask:GPTask,Util:Util,Config:Config,Projection:Projection,TileLayer:TileLayer,MapOverlay:MapOverlay,MapType:MapType};var NS=namespace("gmaps");NS.ags=arcgis})();